{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Desktop/DevProject/nwitter/src/components/App.js\";\nimport React, { useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => console.log(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppRouter, {\n    isLoggedIn: isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"\\xA9 Nwitter \", new Date().getFullYear()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/neo/Desktop/DevProject/nwitter/src/components/App.js"],"names":["React","useState","AppRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","currentUser","useEffect","onAuthStateChanged","user","console","log","Date","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACE,WAAW,CAACM,WAAb,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,WAAW,CAACQ,kBAAZ,CAAgCC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzC;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEL,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwB,IAAIQ,IAAJ,GAAWC,WAAX,EAAxB,CAFF,CADF;AAMD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => console.log(user));\n  }, []);\n  return (\n    <>\n      <AppRouter isLoggedIn={isLoggedIn} />\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}